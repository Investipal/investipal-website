---
export interface Props {
  items: Array<{
    name: string;
    href?: string;
  }>;
}

const { items } = Astro.props;

// Generate breadcrumb structured data
const breadcrumbStructuredData = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": items.map((item, index) => ({
    "@type": "ListItem",
    "position": index + 1,
    "name": item.name,
    ...(item.href && { "item": new URL(item.href, Astro.site || 'https://investipal.co').toString() })
  }))
};
---

<!-- Breadcrumb Structured Data -->
<script type="application/ld+json" set:html={JSON.stringify(breadcrumbStructuredData)} />

<!-- Breadcrumb Navigation -->
<nav class="bg-gray-50 border-b border-gray-200" aria-label="Breadcrumb">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <ol class="flex items-center space-x-2 py-3 text-sm">
      {items.map((item, index) => (
        <li class="flex items-center">
          {index > 0 && (
            <svg class="w-4 h-4 text-gray-400 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
            </svg>
          )}
          {item.href ? (
            <a 
              href={item.href} 
              class="text-gray-600 hover:text-investipal-600 transition-colors"
              aria-current={index === items.length - 1 ? 'page' : undefined}
            >
              {item.name}
            </a>
          ) : (
            <span class="text-gray-900 font-medium" aria-current="page">
              {item.name}
            </span>
          )}
        </li>
      ))}
    </ol>
  </div>
</nav>





